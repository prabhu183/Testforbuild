<?xml version="1.0" encoding="UTF-8"?>
<project name="Testforbuild" default="quick-build" xmlns:sonar="antlib:org.sonar.ant">
	
	<!-- ========= Define the main properties of this project ========= -->
	<property name="src.dir" value="${basedir}" />
	
	<!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
	<property name="sonar.host.url" value="http://localhost:9000" />
	<property name="sonar.login" value="1f670291d58ae6508e29199d9c1b8f0c432da20a" />
	<property name="sonar.password" value="" />

	<!-- Define the Sonar properties -->
	<property name="sonar.projectKey" value="org.sonarqube:TestSonarBuild" />
	<property name="sonar.projectName" value="Test Sonar Build" />
	<property name="sonar.projectVersion" value="1.0" />
	<property name="sonar.sources" value="${src.dir}" />
	<property name="sonar.sourceEncoding" value="UTF-8" />
	<property name="sonar.scm.disabled" value="true"/>

    <target name="clean" unless="clean.done" description="Cleanup build artifacts.">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/zip/connector.zip"/>
		<!--<delete dir="${basedir}/zip/connector.zip"/>-->     
        <property name="clean.done" value="true"/>
    </target>
    
    <!--
        Composer build dependencies
    -->
    <target name="check-composer-binary">
        <available file="${basedir}/composer.phar" property="composer.binary.present"/>
    </target>

    <!-- Download composer
    <exec executable="bash" failonerror="true">
            <arg value="-c" />
            <arg value="curl -s https://getcomposer.org/installer | php" />
        </exec>
    -->
    <target name="install-composer-binary" depends="check-composer-binary"  unless="composer.binary.present">
    	<exec executable="bash" failonerror="true">
            <arg value="-c" />
            <arg value="curl -s https://getcomposer.org/installer | php" />
        </exec>
        <!--<property name="composer.noselfupdate" value="true"/>
        <get src="https://getcomposer.org/download/2.0.8/composer.phar" dest="composer.phar"/>-->
    </target>

    <!-- selfupdate composer-->
    <!-- <target name="update-composer-binary" depends="install-composer-binary">
        <exec executable="php">
            <arg value="composer.phar" />
            <arg value="update" />
            <arg value="no-interaction" />
        </exec>
    </target> -->

    <target name="composer-selfupdate" depends="install-composer-binary" unless="composer.noselfupdate">
        <exec executable="php">
          <arg value="composer.phar" />
          <arg value="self-update"/>
        </exec>
      </target>

    <target name="composer-update" depends="composer-selfupdate" unless="composer.noupdate" description="Run composer update">
        <exec executable="php">
            <arg value="composer.phar" />
            <arg value="update" />
        </exec>
    </target>

    <!-- execute composer install -->
    <target name="build-composer-install" depends="composer-update">
        <exec executable="php" failonerror="true">
            <arg value="composer.phar" />
            <arg value="install" />
            <arg value="--no-interaction" />
            <arg value="--optimize-autoloader" />
        </exec>
    </target>

    <target name="full-build" depends="build-composer-install"
            description="Perform static analysis, run tests, and generate project documentation.">
        <echo message="Built"/>
    </target>

    <target name="lint" unless="lint.done" description="Perform syntax check of PHP sourcecode files.">
        <apply executable="php" failonerror="true" taskname="lint">
            <arg value="-l"/>
            <fileset dir="${basedir}/">
                <include name="**/*.php"/>
				<exclude name="vendor/**" />
                <!-- modified/ -->
            </fileset>
        </apply>
        <property name="lint.done" value="true"/>
    </target>


    <target name="prepare" unless="prepare.done" depends="clean"  description="Prepare for build.">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>        
        <property name="prepare.done" value="true"/>
    </target>	


	<target name="compile">
		<javac srcdir="${src.dir}" fork="true" debug="true" includeAntRuntime="false" />
	</target>
	
	<!-- ========= Define SonarQube Scanner for Ant Target ========= -->
	<target name="sonar" depends="compile">
		<taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
			<!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
			<classpath path="C:\sonarant\sonarqube-ant-task-2.7.0.1612.jar" />
		</taskdef>
		
		<!-- Execute SonarQube Scanner for Ant Analysis -->
		<sonar:sonar />
	</target>

    <target name="quick-build" depends="prepare,build-composer-install,lint,compile,sonar"
            description="Perform lint check and run tests without generating code coverage reports.">
        <echo message="Built"/>
    </target>
	
	<!--<target name="ziprun">
		<zip destfile="zip/connector.zip" basedir="${basedir}"/>
	</target>-->

   
</project>
